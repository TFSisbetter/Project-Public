// <auto-generated />
using System;
using BeltmanSoftwareDesign.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeltmanSoftwareDesign.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.BankStatement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Bank")
                        .HasColumnType("int");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<int>("CreditType")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EigenRekeningNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBelasting")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBelastingBTW")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHuur")
                        .HasColumnType("bit");

                    b.Property<double>("KleineOndernemersRegeling")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Saldo")
                        .HasColumnType("float");

                    b.Property<string>("TegenName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TegenRekeningNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VolgNr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BankStatements");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.BankStatementExpense", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long?>("BankStatementId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ExpenseId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("BankStatementExpenses");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.BankStatementInvoice", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long?>("BankStatementId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InvoiceId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("BankStatementInvoices");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Change", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChangeSetPathId")
                        .HasColumnType("int");

                    b.Property<string>("ChangeType")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("ChangesetId")
                        .HasColumnType("int");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Changes");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.ChangePath", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChangePaths");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.ChangeSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RealChangesetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ChangeSets");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.ClientBearer", b =>
                {
                    b.Property<string>("id")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<long?>("ClientDeviceId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ClientIpAddressId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("id");

                    b.HasIndex("ClientDeviceId");

                    b.HasIndex("ClientIpAddressId");

                    b.HasIndex("UserId");

                    b.ToTable("ClientBearers");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.ClientDevice", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("DeviceHash")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("id");

                    b.ToTable("ClientDevices");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.ClientDeviceProperty", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ClientDeviceId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("ClientDeviceId");

                    b.ToTable("ClientDeviceProperties");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.ClientIpAddress", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("id");

                    b.ToTable("ClientLocations");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Company", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("BtwNumber")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<long?>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateDelete")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateInsert")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Iban")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("KvkNumber")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PayNL_ApiToken")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PayNL_ServiceId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Place")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Postalcode")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Website")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.CompanyUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Actief")
                        .HasColumnType("bit");

                    b.Property<bool>("Admin")
                        .HasColumnType("bit");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CurrentCustomerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CurrentExpenseTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CurrentInvoiceTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CurrentProjectId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CurrentRateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CurrentSupplierId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateDelete")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateInsert")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Eigenaar")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("CompanyUsers");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Country", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Customer", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postalcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Publiekelijk")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CountryId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Document", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DocumentTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SupplierId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.DocumentAttachment", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DocumentId")
                        .HasColumnType("bigint");

                    b.Property<string>("FileMD5")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FileMimeType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("DocumentAttachments");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.DocumentType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DocumentTypes");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Expense", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateKapot")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ExpenseTypeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsPayedInCash")
                        .HasColumnType("bit");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<double>("Restwaarde")
                        .HasColumnType("float");

                    b.Property<long?>("SupplierId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.ExpenseAttachment", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EmailDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailHtmlBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmailIndex")
                        .HasColumnType("int");

                    b.Property<string>("EmailSubject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailTextBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailUniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ExpenseId")
                        .HasColumnType("bigint");

                    b.Property<string>("FileMD5")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FileMimeType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("ExpenseAttachments");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.ExpenseProduct", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long?>("ExpenseId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("ExpenseProducts");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.ExpenseTaxRatePrice", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long?>("ExpenseId")
                        .HasColumnType("bigint");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<long?>("TaxRateId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("ExpenseTaxRatePrices");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.ExpenseType", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<int>("AfschrijfKostenType")
                        .HasColumnType("int");

                    b.Property<int>("BedrijfsKostenType")
                        .HasColumnType("int");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsHalfTellen")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRepresentatieKosten")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVolledigeKosten")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("ExpenseTypes");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Experience", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<int?>("AmountUur")
                        .HasColumnType("int");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Stop")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Experiences");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.ExperienceAttachment", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("ExperienceId")
                        .HasColumnType("bigint");

                    b.Property<string>("FileMD5")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FileMimeType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<bool>("Spotlight")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("ExperienceAttachments");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.ExperienceTechnology", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long?>("ExperienceId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TechnologyId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("ExperienceTechnologies");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Invoice", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatePayed")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("InvoiceTypeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsPayed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPayedInCash")
                        .HasColumnType("bit");

                    b.Property<string>("PaymentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<double?>("RatePrice")
                        .HasColumnType("float");

                    b.Property<long?>("SetToPayed_By_CompanyUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TaxRateId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InvoiceTypeId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("SetToPayed_By_CompanyUserId");

                    b.HasIndex("TaxRateId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.InvoiceAttachment", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileMD5")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FileMimeType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<long>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsInvoicePDF")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorkorderPDF")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("InvoiceAttachments");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.InvoiceEmail", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateEmailGezien")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateInvoiceGezien")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateVerzonden")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailGezien")
                        .HasColumnType("bit");

                    b.Property<string>("EmailTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InvoiceGezien")
                        .HasColumnType("bit");

                    b.Property<long>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("InvoiceEmails");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.InvoiceProduct", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long?>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("InvoiceProducts");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.InvoiceRow", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDiscountRow")
                        .HasColumnType("bit");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("PricePerPiece")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceRows");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.InvoiceType", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("CompanyId");

                    b.ToTable("InvoiceTypes");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.InvoiceWorkorder", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long?>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WorkorderId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("RateId");

                    b.HasIndex("WorkorderId");

                    b.ToTable("InvoiceWorkorders");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Product", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<long?>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TaxRateId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Project", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Publiekelijk")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Rate", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double?>("Tax")
                        .HasColumnType("float");

                    b.Property<long?>("TaxRateId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("TaxRateId");

                    b.ToTable("WorkRates");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Residence", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("WOZWaarde")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Residences");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Setting", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ValueDouble")
                        .HasColumnType("float");

                    b.Property<string>("ValueString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Supplier", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postalcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Publiekelijk")
                        .HasColumnType("bit");

                    b.Property<string>("RekeningNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.TaxRate", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Percentage")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CountryId");

                    b.ToTable("TaxRates");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Technology", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<bool>("IsProgrammeerTaal")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("id");

                    b.ToTable("Technologies");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.TechnologyAttachment", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("FileMD5")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FileMimeType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<long>("TechnologyId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("TechnologyAttachments");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.TrafficRegistration", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("KilometerStart")
                        .HasColumnType("float");

                    b.Property<double>("KilometerStop")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("TrafficRegistrations");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Transaction", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<DateTime?>("BetaalAnnuleringsDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("ConsumentenPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatePayed")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPayed")
                        .HasColumnType("bit");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("RequestCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RequestResult")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionPaymentReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionPaymentURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TransactionPopupAllowed")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.TransactionLog", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Connection_BrowserData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Connection_City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Connection_Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Connection_Host")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Connection_IP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Connection_LocationLat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Connection_LocationLon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Connection_MerchantCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Connection_MerchantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Connection_OrderIP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Connection_OrderReturnUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Connection_Trust")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<int>("PaymentDetails_Amount")
                        .HasColumnType("int");

                    b.Property<string>("PaymentDetails_Created")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentDetails_CurrencyAmount")
                        .HasColumnType("int");

                    b.Property<string>("PaymentDetails_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDetails_Exchange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDetails_IdentifierHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDetails_IdentifierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDetails_IdentifierPublic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDetails_Modified")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDetails_PaidAmount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDetails_PaidAttemps")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDetails_PaidBase")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDetails_PaidCosts")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDetails_PaidCostsVat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDetails_PaidCurrencyAmount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDetails_PaidCurreny")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDetails_PaidDuration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDetails_PaymentMethodDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDetails_PaymentMethodId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDetails_PaymentMethodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentDetails_PaymentOptionId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentDetails_PaymentOptionSubId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentDetails_PaymentProfileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDetails_ProcessTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PaymentDetails_Secure")
                        .HasColumnType("bit");

                    b.Property<string>("PaymentDetails_SecureStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDetails_ServiceDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDetails_ServiceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDetails_ServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDetails_State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDetails_StateDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDetails_StateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PaymentDetails_Storno")
                        .HasColumnType("bit");

                    b.Property<string>("Request")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Request_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Request_Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Request_Result")
                        .HasColumnType("bit");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatsDetails_Extra1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatsDetails_Extra2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatsDetails_Extra3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatsDetails_Info")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatsDetails_Object")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatsDetails_PaymentSessionId")
                        .HasColumnType("int");

                    b.Property<int?>("StatsDetails_PromotorId")
                        .HasColumnType("int");

                    b.Property<string>("StatsDetails_Tool")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StornoDetails_BankAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StornoDetails_City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StornoDetails_Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StornoDetails_EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StornoDetails_IBAN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StornoDetails_Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StornoDetails_StornoAmount")
                        .HasColumnType("int");

                    b.Property<int?>("StornoDetails_StornoId")
                        .HasColumnType("int");

                    b.Property<string>("StornoDetails_bic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TransactieId")
                        .HasColumnType("bigint");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("TransactionLogs");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<long?>("CurrentCompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("LockedOut")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("CurrentCompanyId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Workorder", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<double?>("AmountUur")
                        .HasColumnType("float");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RateId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Stop")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RateId");

                    b.ToTable("Workorders");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.WorkorderAttachment", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("FileMD5")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FileMimeType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<long>("WorkorderId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("WorkorderId");

                    b.ToTable("WorkorderAttachments");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.ClientBearer", b =>
                {
                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.ClientDevice", "ClientDevice")
                        .WithMany("ClientBearers")
                        .HasForeignKey("ClientDeviceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.ClientIpAddress", "ClientIpAddress")
                        .WithMany("ClientBearers")
                        .HasForeignKey("ClientIpAddressId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.User", "User")
                        .WithMany("ClientBearers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ClientDevice");

                    b.Navigation("ClientIpAddress");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.ClientDeviceProperty", b =>
                {
                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.ClientDevice", "ClientDevice")
                        .WithMany("ClientDeviceProperties")
                        .HasForeignKey("ClientDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientDevice");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Company", b =>
                {
                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.Country", "Country")
                        .WithMany("Companies")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Country");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.CompanyUser", b =>
                {
                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.Company", "Company")
                        .WithMany("CompanyUsers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.User", "User")
                        .WithMany("CompanyUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Customer", b =>
                {
                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.Company", "Company")
                        .WithMany("Customers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.Country", "Country")
                        .WithMany("Customers")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Company");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Invoice", b =>
                {
                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.Company", "Company")
                        .WithMany("Invoices")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.Customer", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.InvoiceType", "InvoiceType")
                        .WithMany("Invoices")
                        .HasForeignKey("InvoiceTypeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.Project", "Project")
                        .WithMany("Invoices")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.CompanyUser", "SetToPayed_By_CompanyUser")
                        .WithMany("Invoices_SetToPayed")
                        .HasForeignKey("SetToPayed_By_CompanyUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.TaxRate", "TaxRate")
                        .WithMany("Invoices")
                        .HasForeignKey("TaxRateId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Company");

                    b.Navigation("Customer");

                    b.Navigation("InvoiceType");

                    b.Navigation("Project");

                    b.Navigation("SetToPayed_By_CompanyUser");

                    b.Navigation("TaxRate");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.InvoiceRow", b =>
                {
                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.Invoice", "Invoice")
                        .WithMany("InvoiceRows")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.InvoiceType", b =>
                {
                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.Company", "Company")
                        .WithMany("InvoiceTypes")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.InvoiceWorkorder", b =>
                {
                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.Invoice", "Invoice")
                        .WithMany("InvoiceWorkorders")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.Rate", "Rate")
                        .WithMany("InvoiceWorkorders")
                        .HasForeignKey("RateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.Workorder", "Workorder")
                        .WithMany("InvoiceWorkorders")
                        .HasForeignKey("WorkorderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Invoice");

                    b.Navigation("Rate");

                    b.Navigation("Workorder");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Project", b =>
                {
                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.Company", "Company")
                        .WithMany("Projects")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.Customer", "Customer")
                        .WithMany("Projects")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Company");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Rate", b =>
                {
                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.Company", "Company")
                        .WithMany("Rates")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.TaxRate", "TaxRate")
                        .WithMany("Rates")
                        .HasForeignKey("TaxRateId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Company");

                    b.Navigation("TaxRate");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.TaxRate", b =>
                {
                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.Company", "Company")
                        .WithMany("TaxRates")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.Country", "Country")
                        .WithMany("TaxRates")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Company");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.User", b =>
                {
                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.Company", "CurrentCompany")
                        .WithMany("CurrentUsers")
                        .HasForeignKey("CurrentCompanyId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CurrentCompany");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Workorder", b =>
                {
                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.Company", "Company")
                        .WithMany("Workorders")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.Customer", "Customer")
                        .WithMany("Workorders")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.Project", "Project")
                        .WithMany("Workorders")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.Rate", "Rate")
                        .WithMany("Workorders")
                        .HasForeignKey("RateId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Company");

                    b.Navigation("Customer");

                    b.Navigation("Project");

                    b.Navigation("Rate");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.WorkorderAttachment", b =>
                {
                    b.HasOne("BeltmanSoftwareDesign.Data.Entities.Workorder", "Workorder")
                        .WithMany("WorkorderAttachments")
                        .HasForeignKey("WorkorderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workorder");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.ClientDevice", b =>
                {
                    b.Navigation("ClientBearers");

                    b.Navigation("ClientDeviceProperties");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.ClientIpAddress", b =>
                {
                    b.Navigation("ClientBearers");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Company", b =>
                {
                    b.Navigation("CompanyUsers");

                    b.Navigation("CurrentUsers");

                    b.Navigation("Customers");

                    b.Navigation("InvoiceTypes");

                    b.Navigation("Invoices");

                    b.Navigation("Projects");

                    b.Navigation("Rates");

                    b.Navigation("TaxRates");

                    b.Navigation("Workorders");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.CompanyUser", b =>
                {
                    b.Navigation("Invoices_SetToPayed");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Country", b =>
                {
                    b.Navigation("Companies");

                    b.Navigation("Customers");

                    b.Navigation("TaxRates");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Customer", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("Projects");

                    b.Navigation("Workorders");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Invoice", b =>
                {
                    b.Navigation("InvoiceRows");

                    b.Navigation("InvoiceWorkorders");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.InvoiceType", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Project", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("Workorders");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Rate", b =>
                {
                    b.Navigation("InvoiceWorkorders");

                    b.Navigation("Workorders");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.TaxRate", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("Rates");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.User", b =>
                {
                    b.Navigation("ClientBearers");

                    b.Navigation("CompanyUsers");
                });

            modelBuilder.Entity("BeltmanSoftwareDesign.Data.Entities.Workorder", b =>
                {
                    b.Navigation("InvoiceWorkorders");

                    b.Navigation("WorkorderAttachments");
                });
#pragma warning restore 612, 618
        }
    }
}
